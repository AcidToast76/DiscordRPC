{"version":3,"sources":["app.js"],"names":["clientId","DiscordRPC","require","Client","transport","spotifyJSONfetch","url","spotifyData","regeneratorRuntime","async","_context","prev","next","awrap","fetch","then","res","json","sent","RPC","log","abrupt","stop","updateDiscordRPCWithSpotify","playing","_context2","console","dir","isPlaying","details","state","concat","track","title","artists","name","album","largeImageKey","image","largeImageText","startTimestamp","meta","start","endTimestamp","end","buttons","label","optimizeDiscordAPIRequests","_context3","setInterval","spotifyTrack","err","error"],"mappings":"aAAA,IAAMA,SAAW,sBACXC,WAAaC,QAAQ,eADrBF,IAAQ,IAAGC,WAAAE,OAAA,CAAjBC,UAAA,QACA,SAAgBC,iBAAWC,GAA3B,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAI4BC,MAAM,gDAAgDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAJlG,KAAA,EAAA,OAIQV,EAJRG,EAAAQ,KACMC,QAAMC,IAAInB,GADhBS,EAAAW,OAAA,SAC6Cd,GAD7C,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAY,UAGA,SAAAC,8BAAA,IAAAhB,EAAAiB,EAAA,OAAAhB,mBAAAC,MAAA,SAAAgB,GAAA,OAAA,OAAAA,EAAAd,KAAAc,EAAAb,MAAA,KAAA,EAAA,OAAAa,EAAAb,KAAA,EAAAJ,mBAAAK,MAAAC,MAAA,gDAAAC,KAAA,SAAAC,GAAA,OAAAA,EAAAC,UAAA,KAAA,EAAA,GAAAV,EAAAkB,EAAAP,KAAAQ,QAAAC,IAAApB,GAAAY,IAAA,CAAAM,EAAAb,KAAA,EAAA,MAAA,OAAAa,EAAAJ,OAAA,UAAA,KAAA,EAAAG,EAAAjB,EAAAiB,QAAAjB,EAAAqB,UAEIF,IAAAA,YAAQN,CAFZS,QAAA,uBAqBQC,MAAK,GAAAC,OAAKP,EAAQQ,MAAMC,MAAnB,QAAAF,OAA+BP,EAAQU,QAAQ,GAAGC,KAAlD,QAAAJ,OAA6DP,EAAQY,MAAMH,OArBxFI,cAAAb,EAAAY,MAAAE,MAAAC,eAAAf,EAAAY,MAAAH,MAAAO,eAAAhB,EAAAiB,KAAAC,MAAAC,aAAAnB,EAAAiB,KAAAG,IAAAC,QAAA,CAAA,CAAAC,MAAA,oBAAAxC,IAAAkB,EAAAQ,MAAA1B,KAAA,CAAAwC,MAAA,UAAAxC,IAAA,mCAAA,KAAA,EAAA,IAAA,MAAA,OAAAmB,EAAAH,UAUA,SAAAyB,6BAAA,IAAAxC,EAAAqB,EAAA,OAAApB,mBAAAC,MAAA,SAAAuC,GAAA,OAAA,OAAAA,EAAArC,KAAAqC,EAAApC,MAAA,KAAA,EAAA,OAAAoC,EAAApC,KAAA,EAAAJ,mBAAAK,MAAAC,MAAA,gDACkCC,KAAA,SAAAC,GAAA,OAADA,EAAiDD,UADlF,KAAA,EAAAR,EAAAyC,EAAA9B,KAC0FU,EAAIZ,EAAJY,UA+BtFqB,YAAY,WAhChB,MAAA,IAAArB,GAAA,CACQrB,IAAAA,EADRA,EAAAiB,QAAAQ,MAAAC,MAoCY,GAAIiB,MAAAA,EApChB,OAGQ/B,mCAHRO,QAAAC,IAAApB,KAAA,KAAA,KAAA,EAAA,IAAA,MAAA,OAAAyC,EAAA1B,UAVAjB,mBAoBQwB,IAAAA,GAAAA,QAAAA,WAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EACAC,8BACAO,YAAAA,WACAE,8BACAC,MAJAX,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,YAOMiB,IAAAA,MAAAA,CAAAA,SAAAA,WAAAA,MAAO,SAAAK,GAAA,OAAAzB,QAAT0B,MAAAD","file":"app.min.js","sourcesContent":["const clientId = \"1254145695762485248\";\r\nconst DiscordRPC = require(\"discord-rpc\");\r\nconst RPC = new DiscordRPC.Client({ transport: \"ipc\" });\r\n\r\nasync function spotifyJSONfetch(url) {\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json())\r\n    console.log(spotifyData)\r\n    return spotifyData;\r\n}\r\n\r\nspotifyJSONfetch();\r\n\r\n\r\n// Function to update Discord RPC with Spotify track information\r\nasync function updateDiscordRPCWithSpotify() {\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json());\r\n    console.dir(spotifyData);\r\n    if(!RPC) {\r\n        return;\r\n    }\r\n\r\n    const { playing, isPlaying } = spotifyData;\r\n    \r\n    RPC.setActivity({\r\n        details: \"Listening To Spotify\",\r\n        state: `${playing.track.title} by ${playing.artists[0].name} on ${playing.album.title}`,\r\n        largeImageKey: playing.album.image,\r\n        largeImageText: playing.album.title,\r\n        startTimestamp: playing.meta.start,\r\n        endTimestamp: playing.meta.end,\r\n        buttons: [\r\n            { label: \"Listen on Spotify\", url: playing.track.url },\r\n            { label: \"Website\", url: \"https://nezha.thefemdevs.com\"},\r\n        ],\r\n    })\r\n\r\n\r\n}\r\n\r\n// Function to optimize Discord API requests\r\n\r\nasync function optimizeDiscordAPIRequests() {\r\n\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json());\r\n    let isPlaying = spotifyData.isPlaying;\r\n\r\n    setInterval(() => {\r\n        while (isPlaying === true) {\r\n            let spotifyTrack = spotifyData.playing.track.title;\r\n            \r\n            if (spotifyTrack !== null && spotifyTrack !== undefined) {\r\n                updateDiscordRPCWithSpotify();\r\n                console.dir(spotifyData);\r\n                return;\r\n            } else {\r\n                continue;\r\n            }\r\n        }\r\n    }, 500);\r\n}\r\n\r\nRPC.on(\"ready\", async () => {\r\n    updateDiscordRPCWithSpotify();\r\n    setInterval(() => {\r\n        optimizeDiscordAPIRequests();\r\n    }, 15e3);\r\n});\r\n\r\nRPC.login({ clientId }).catch(err => console.error(err));\r\n\r\n\r\n"]}