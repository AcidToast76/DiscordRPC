{"version":3,"sources":["app.js"],"names":["clientId","DiscordRPC","require","Client","transport","spotifyJSONfetch","url","spotifyData","regeneratorRuntime","async","_context","prev","next","awrap","fetch","then","res","json","sent","RPC","log","abrupt","stop","updateDiscordRPCWithSpotify","_spotifyData$playing","playing","_context2","console","dir","isPlaying","state","concat","track","title","name","album","largeImageKey","artists","image","largeImageText","buttons","label","on","setInterval","login","err","error"],"mappings":"aAAA,IAAMA,SAAW,sBACXC,WAAaC,QAAQ,eADrBF,IAAQ,IAAGC,WAAAE,OAAA,CAAjBC,UAAA,QACA,SAAgBC,iBAAWC,GAA3B,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAI4BC,MAAM,gDAAgDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAJlG,KAAA,EAAA,OAIQV,EAJRG,EAAAQ,KACMC,QAAMC,IAAInB,GADhBS,EAAAW,OAAA,SAC6Cd,GAD7C,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAY,UAGA,SAAAC,8BAAA,IAAAhB,EAAAiB,EAAAC,EAAA,OAAAjB,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OAAAc,EAAAd,KAAA,EAAAJ,mBAAAK,MAAAC,MAAA,gDAAAC,KAAA,SAAAC,GAAA,OAAAA,EAAAC,UAAA,KAAA,EAAA,GAAAV,EAAAmB,EAAAR,KAAAS,QAAAC,IAAArB,GAAAY,IAAA,CAAAO,EAAAd,KAAA,EAAA,MAAA,OAAAc,EAAAL,OAAA,UAAA,KAAA,EAAAG,EAgBmCjB,EAAYkB,QAAnCA,EAhBZD,EAgBYC,QAhBZD,EAgBqBK,UAfbtB,IAAAA,YAAAA,CACJoB,QAAO,uBAFXG,MAAA,GAAAC,OAAAN,EAAAO,MAAAC,MAAA,QAAAF,OAGWxB,EAAAA,QAHX2B,KAAA,QAAAH,OAAAN,EAAAU,MAAAF,OAqBQG,cAAeX,EAAQU,MAAME,QAAQC,MArB7CC,eAAAd,EAAAU,MAAAF,MAAAO,QAAA,CAAA,CAAAC,MAAA,oBAAAnC,IAAAmB,EAAAO,MAAA1B,KAAA,CAAAmC,MAAA,UAAAnC,IAAA,mCAAA,KAAA,EAAA,IAAA,MAAA,OAAAoB,EAAAJ,UAAAjB,mBASAc,IAAAuB,GAAA,QAAenB,WAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAfA,8BAyBIoB,YAAY,WAzBhBpB,+BAAA,MAAeA,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,YAAfJ,IAAAyB,MAAA,CAAA5C,SAAAA,WAAA,MAAA,SAAA6C,GAAA,OAAAlB,QAAAmB,MAAAD","file":"app.min.js","sourcesContent":["const clientId = \"1254145695762485248\";\r\nconst DiscordRPC = require(\"discord-rpc\");\r\nconst RPC = new DiscordRPC.Client({ transport: \"ipc\" });\r\n\r\nasync function spotifyJSONfetch(url) {\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json())\r\n    console.log(spotifyData)\r\n    return spotifyData;\r\n}\r\n\r\nspotifyJSONfetch();\r\n\r\n// Function to update Discord RPC with Spotify track information\r\nasync function updateDiscordRPCWithSpotify() {\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json());\r\n    console.dir(spotifyData);\r\n    if(!RPC) {\r\n        return;\r\n    }\r\n\r\n    const { playing, isPlaying } = spotifyData.playing;\r\n    \r\n    RPC.setActivity({\r\n        details: \"Listening To Spotify\",\r\n        state: `${playing.track.title} by ${playing.artists.name} on ${playing.album.title}`,\r\n        largeImageKey: playing.album.artists.image,\r\n        largeImageText: playing.album.title,\r\n        buttons: [\r\n            { label: \"Listen on Spotify\", url: playing.track.url },\r\n            { label: \"Website\", url: \"https://nezha.thefemdevs.com\"},\r\n        ],\r\n    })\r\n\r\n\r\n}\r\n\r\nRPC.on(\"ready\", async () => {\r\n    updateDiscordRPCWithSpotify();\r\n    setInterval(() => {\r\n        updateDiscordRPCWithSpotify();\r\n    }, 15e3);\r\n});\r\n\r\nRPC.login({ clientId }).catch(err => console.error(err));\r\n"]}