{"version":3,"sources":["app.js"],"names":["clientId","DiscordRPC","require","Client","transport","spotifyJSONfetch","url","spotifyData","regeneratorRuntime","async","_context","prev","next","awrap","fetch","then","res","json","sent","RPC","log","abrupt","stop","updateDiscordRPCWithSpotify","_spotifyData$song","name","artists","album","_context2","console","dir","song","state","concat","largeImageKey","largeImageText","buttons","label","on","setInterval","login","err","error"],"mappings":"aAAA,IAAMA,SAAW,sBACXC,WAAaC,QAAQ,eADrBF,IAAQ,IAAGC,WAAAE,OAAA,CAAjBC,UAAA,QACA,SAAgBC,iBAAWC,GAA3B,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAI4BC,MAAM,gDAAgDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAJlG,KAAA,EAAA,OAIQV,EAJRG,EAAAQ,KACMC,QAAMC,IAAInB,GADhBS,EAAAW,OAAA,SAC6Cd,GAD7C,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAY,UAGA,SAAAC,8BAAA,IAAAhB,EAAAiB,EAAAC,EAAAC,EAAAC,EAAArB,EAAA,OAAAE,mBAAAC,MAAA,SAAAmB,GAAA,OAAA,OAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,EAAA,OAAAgB,EAAAhB,KAAA,EAAAJ,mBAAAK,MAAAC,MAAA,gDAAAC,KAAA,SAAAC,GAAA,OAAAA,EAAAC,UAAA,KAAA,EAAA,GAAAV,EAAAqB,EAAAV,KAAAW,QAAAC,IAAAvB,GAAAY,IAAA,CAAAS,EAAAhB,KAAA,EAAA,MAAA,OAAAgB,EAAAP,OAAA,UAAA,KAAA,EAAAG,EAgByCjB,EAAYwB,KAAzCN,EAhBZD,EAgBYC,KAAMC,EAhBlBF,EAgBkBE,QAASC,EAhB3BH,EAgB2BG,MAAOrB,EAhBlCkB,EAgBkClB,IAf1BC,IAAAA,YAAAA,CACJsB,QAAO,uBAFXG,MAAA,GAAAC,OAAAR,EAAA,QAAAQ,OAAAP,EAAA,QAAAO,OAGW1B,GAkBH2B,cAAe,UArBvBC,eAAAR,EAAAS,QAAA,CAAA,CAAAC,MAAA,oBAAA/B,IAAAA,GAAA,CAAA+B,MAAA,UAAA/B,IAAA,mCAAA,KAAA,EAAA,IAAA,MAAA,OAAAsB,EAAAN,UAAAjB,mBASAc,IAAAmB,GAAA,QAAef,WAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAfA,8BAyBIgB,YAAY,WAzBhBhB,+BAAA,MAAeA,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,YAAfJ,IAAAqB,MAAA,CAAAxC,SAAAA,WAAA,MAAA,SAAAyC,GAAA,OAAAZ,QAAAa,MAAAD","file":"app.min.js","sourcesContent":["const clientId = \"1254145695762485248\";\r\nconst DiscordRPC = require(\"discord-rpc\");\r\nconst RPC = new DiscordRPC.Client({ transport: \"ipc\" });\r\n\r\nasync function spotifyJSONfetch(url) {\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json())\r\n    console.log(spotifyData)\r\n    return spotifyData;\r\n}\r\n\r\nspotifyJSONfetch();\r\n\r\n// Function to update Discord RPC with Spotify track information\r\nasync function updateDiscordRPCWithSpotify() {\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json());\r\n    console.dir(spotifyData);\r\n    if(!RPC) {\r\n        return;\r\n    }\r\n\r\n    const { name, artists, album, url} = spotifyData.song\r\n    \r\n    RPC.setActivity({\r\n        details: \"Listening To Spotify\",\r\n        state: `${name} by ${artists} on ${album}`,\r\n        largeImageKey: \"spotify\",\r\n        largeImageText: album,\r\n        buttons: [\r\n            { label: \"Listen on Spotify\", url },\r\n            { label: \"Website\", url: \"https://nezha.thefemdevs.com\"},\r\n        ],\r\n    })\r\n\r\n\r\n}\r\n\r\nRPC.on(\"ready\", async () => {\r\n    updateDiscordRPCWithSpotify();\r\n    setInterval(() => {\r\n        updateDiscordRPCWithSpotify();\r\n    }, 15e3);\r\n});\r\n\r\nRPC.login({ clientId }).catch(err => console.error(err));\r\n"]}