{"version":3,"sources":["app.js"],"names":["clientId","DiscordRPC","require","Client","transport","setActivity","fetch","then","res","json","spotifyRPC","register","RPC","song","title","name","artists","album","url","details","join","state","largeImageKey","largeImageText","smallImageKey","smallImageText","instance","buttons","console","label","ok","response","data","trackName","item","artistName","map","artist","trackUrl","external_urls","spotify","updateDiscordRPCWithSpotify","_ref","regeneratorRuntime","async","_context4","prev","next","awrap","fetchCurrentlyPlayingTrack","accessToken","sent","concat","setInterval","t0","error","stop","on","_context2","_context5","login","err"],"mappings":"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","file":"app.min.js","sourcesContent":["const clientId = \"1254145695762485248\";\r\nconst DiscordRPC = require(\"discord-rpc\");\r\nconst RPC = new DiscordRPC.Client({ transport: \"ipc\" });\r\n\r\n\r\nDiscordRPC.register(clientId);\r\n\r\nasync function setActivity() {\r\n    let spotifyRPC = await fetch(\"https://spotify.thefemdevs.com/playing/nezha\").then(res => res.json());\r\n    console.dir(spotifyRPC);\r\n    if (!RPC) {\r\n        return;\r\n    }\r\n    const { name: title, artists, album, url } = spotifyRPC.song\r\n    \r\n    RPC.setActivity({\r\n        details: title + \" by \" + artists.join(\", \"),\r\n        state: \"Listening To:\",\r\n        largeImageKey: \"large\",\r\n        largeImageText: \"Large Image\",\r\n        smallImageKey: \"small\",\r\n        smallImageText: \"Small Image\",\r\n        instance: false,\r\n        buttons: [\r\n            { \r\n                label: \"Website\", url: \"https://nezha.thefemdevs.com\" \r\n            },\r\n            { \r\n                label: \"Spotify\", url: \"https://open.spotify.com/user/hpjv09y99ucx7adf3jb6qijvp?si=40ac1fa71e7d44ee\" \r\n            }\r\n        ]\r\n    });\r\n}\r\n\r\nRPC.on(\"ready\", async () => {\r\n    setActivity();\r\n    setInterval(() => {\r\n        setActivity();\r\n    }, 15e3);\r\n});\r\n\r\n\r\n// Function to fetch the currently playing track from Spotify\r\nasync function fetchCurrentlyPlayingTrack() {\r\n    const response = await fetch(\"https://spotify.thefemdevs.com/playing/nezha\", {\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(\"Failed to fetch currently playing track\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    return {\r\n        trackName: data.item.name,\r\n        artistName: data.item.artists.map(artist => artist.name).join(\", \"),\r\n        trackUrl: data.item.external_urls.spotify,\r\n    };\r\n}\r\n\r\n// Function to update Discord RPC with Spotify track information\r\nasync function updateDiscordRPCWithSpotify() {\r\n    try {\r\n        const { trackName, artistName, trackUrl } = await fetchCurrentlyPlayingTrack(accessToken);\r\n\r\n        RPC.setActivity({\r\n            details: `Listening to ${trackName}`,\r\n            state: `by ${artistName}`,\r\n            largeImageKey: \"spotify\",\r\n            buttons: [{ label: \"Listen on Spotify\", url: trackUrl }]\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Failed to update Discord RPC with Spotify:\", error);\r\n    }\r\n}\r\n\r\n// Example usage\r\nRPC.on(\"ready\", async () => {\r\n    updateDiscordRPCWithSpotify();\r\n    setInterval(updateDiscordRPCWithSpotify, 15e3); // Update every 15 seconds\r\n});\r\n\r\nRPC.login({ clientId }).catch(err => console.error(err));\r\n\r\nsetActivity();"]}