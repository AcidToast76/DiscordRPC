{"version":3,"sources":["app.js"],"names":["clientId","DiscordRPC","require","Client","transport","spotifyRPC","regeneratorRuntime","async","_context","prev","next","awrap","fetch","then","res","json","sent","console","log","stop","setActivity","_context2","RPC","abrupt","details","state","largeImageKey","largeImageText","instance","buttons","label","url","setSpotifyRPC","_context3","smallImageKey","smallImageText","spotifyrpc","setInterval","login","err","error"],"mappings":"aAAA,IAAMA,SAAW,sBACXC,WAAaC,QAAQ,eADrBF,IAAQ,IAAGC,WAAAE,OAAA,CAAjBC,UAAA,QAEA,SAAgBH,WAAWE,GAA3B,IAAAE,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAA+CC,MAAA,gDAAAC,KAAA,SAAAC,GAAA,OAAAA,EAAAC,UAA/C,KAAA,EAAoCX,EAApCI,EAAAQ,KAAAC,QAAAC,IAAAb,GAAA,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAW,UAIA,SAAAC,cAAA,OAAAd,mBAAAC,MAAA,SAAAc,GAAA,OAAA,OAAAA,EAAAZ,KAAAY,EAAAX,MAAA,KAAA,EAAA,GAAAY,IAAA,CAAAD,EAAAX,KAAA,EAAA,MAAA,OAAAW,EAAAE,OAAA,UAAA,KAAA,EAAAD,IAAAF,YAAA,CACwFI,QAAA,iBAAAC,MADxF,cAeQC,cAAe,QAfvBC,eAAA,cACOtB,cADP,QAEGY,eAAYZ,cAiBPuB,UAAU,EAnBlBC,QAAA,CAAA,CAAAC,MAAA,UAAAC,IAAA,gCAAA,CAAAD,MAAA,UAAAC,IAAA,kFAAA,KAAA,EAAA,IAAA,MAAA,OAAAV,EAAAF,UAOA,SAAAa,gBAAA,OAAA1B,mBAAAC,MAAA,SAAA0B,GAAA,OAAA,OAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAAA,GAAAY,IAAA,CAAAW,EAAAvB,KAAA,EAAA,MAAA,OAAAuB,EAAAV,OAAA,UAAA,KAAA,EAAAD,IAAAF,YAAA,CAAAI,QAAA,uBAAAC,MAAA,gBAgCQC,cAAe,QAhCvBC,eAAA,cAkCQO,cAAe,QAlCvBC,eAAA,cAKIb,UAAIF,EACAI,QAAAA,CACAC,CACAC,MAAAA,UAHYK,IAAA,gCAKZG,CACAC,MAAAA,UAAgBJ,IAAA,kFAXxB,KAAA,EAAA,IAAA,MAAA,OAAAE,EAAAd,UAZAlB,WAAMA,SAAaC,UAKnBkC,aAyBkCL,IAAAA,GAAAA,QAAAA,WAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EADtBX,cAZQiB,YAAhB,WA+CIjB,eApDR,MAkBkCW,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,YAlBlCT,IAAAgB,MAAA,CAAAtC,SAAAA,WAAA,MAAA,SAAAuC,GAAA,OAAAtB,QAAAuB,MAAAD","file":"app.min.js","sourcesContent":["const clientId = \"1254145695762485248\";\r\nconst DiscordRPC = require(\"discord-rpc\");\r\nconst RPC = new DiscordRPC.Client({ transport: \"ipc\" });\r\n\r\nDiscordRPC.register(clientId);\r\n\r\nasync function spotifyrpc (url) {\r\n   let spotifyRPC = await fetch(\"https://spotify.thefemdevs.com/playing/nezha\").then(res => res.json())\r\n   console.log(spotifyRPC)\r\n}\r\n\r\nspotifyrpc()\r\n\r\nasync function setActivity() {\r\n    if (!RPC) {\r\n        return;\r\n    }\r\n    \r\n    RPC.setActivity({\r\n        details: \"Playing a game\",\r\n        state: \"In the menu\",\r\n        largeImageKey: \"large\",\r\n        largeImageText: \"Large Image\",\r\n        smallImageKey: \"small\",\r\n        smallImageText: \"Small Image\",\r\n        instance: false,\r\n        buttons: [\r\n            { \r\n                label: \"Website\", url: \"https://nezha.thefemdevs.com\" \r\n            },\r\n            { \r\n                label: \"Spotify\", url: \"https://open.spotify.com/user/hpjv09y99ucx7adf3jb6qijvp?si=40ac1fa71e7d44ee\" \r\n            }\r\n        ]\r\n    });\r\n}\r\n\r\nasync function setSpotifyRPC() {\r\n    if (!RPC) {\r\n        return;\r\n    }\r\n    \r\n    RPC.setActivity({\r\n        details: \"Listening to Spotify\",\r\n        state: \"Warframe Bops\",\r\n        largeImageKey: \"large\",\r\n        largeImageText: \"Large Image\",\r\n        smallImageKey: \"small\",\r\n        smallImageText: \"Small Image\",\r\n        instance: false,\r\n        buttons: [\r\n            { \r\n                label: \"Website\", url: \"https://nezha.thefemdevs.com\" \r\n            },\r\n            { \r\n                label: \"Spotify\", url: \"https://open.spotify.com/user/hpjv09y99ucx7adf3jb6qijvp?si=40ac1fa71e7d44ee\" \r\n            }\r\n        ]\r\n    });\r\n\r\n}\r\n\r\nRPC.on(\"ready\", async () => {\r\n    setActivity();\r\n    setInterval(() => {\r\n        setActivity();\r\n    }, 15e3);\r\n});\r\n\r\nRPC.login({ clientId }).catch(err => console.error(err));"]}