{"version":3,"sources":["app.js"],"names":["clientId","DiscordRPC","require","Client","transport","setActivity","fetch","then","res","json","spotifyRPC","register","RPC","clearActivity","song","title","name","artists","album","url","state","details"," on ","largeImageKey","largeImageText","smallImageKey","console","dir","buttons","label","response","data","item","artistName","map","artist","join","external_urls","spotify","updateDiscordRPCWithSpotify","_ref","trackName","trackUrl","regeneratorRuntime","async","_context4","prev","next","awrap","fetchCurrentlyPlayingTrack","sent","concat","t0","error","stop","on","_context2","setInterval","_context5","login","err"],"mappings":"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","file":"app.min.js","sourcesContent":["const clientId = \"1254145695762485248\";\r\nconst DiscordRPC = require(\"discord-rpc\");\r\nconst RPC = new DiscordRPC.Client({ transport: \"ipc\" });\r\n\r\n\r\nDiscordRPC.register(clientId);\r\n\r\nasync function setActivity() {\r\n    let spotifyRPC = await fetch(\"https://spotify.thefemdevs.com/playing/nezha\").then(res => res.json());\r\n    console.dir(spotifyRPC);\r\n    if (!RPC) {\r\n        return;\r\n    }\r\n    if (!spotifyRPC) {\r\n        return RPC.clearActivity();\r\n    }\r\n    const { name: title, artists, album, url } = spotifyRPC.song\r\n    \r\n    RPC.setActivity({\r\n        state: \"Listening To:\",\r\n        details: title, \" by \": artists, \" on \": album,\r\n        largeImageKey: \"large\",\r\n        largeImageText: \"Large Image\",\r\n        smallImageKey: \"small\",\r\n        smallImageText: \"Small Image\",\r\n        instance: false,\r\n        buttons: [\r\n            { \r\n                label: \"Website\", url: \"https://nezha.thefemdevs.com\" \r\n            },\r\n            { \r\n                label: \"Spotify\", url: \"https://open.spotify.com/user/hpjv09y99ucx7adf3jb6qijvp?si=40ac1fa71e7d44ee\" \r\n            },\r\n        ]\r\n    });\r\n}\r\n\r\nRPC.on(\"ready\", async () => {\r\n    setActivity();\r\n    setInterval(() => {\r\n        setActivity();\r\n    }, 15e3);\r\n});\r\n\r\n\r\n// Function to fetch the currently playing track from Spotify\r\nasync function fetchCurrentlyPlayingTrack() {\r\n    const response = await fetch(\"https://spotify.thefemdevs.com/playing/nezha\", {\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(\"Failed to fetch currently playing track\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    return {\r\n        trackName: data.item.name,\r\n        artistName: data.item.artists.map(artist => artist.name).join(\", \"),\r\n        trackUrl: data.item.external_urls.spotify,\r\n    };\r\n}\r\n\r\n// Function to update Discord RPC with Spotify track information\r\nasync function updateDiscordRPCWithSpotify() {\r\n    try {\r\n        const { trackName, artistName, trackUrl } = await fetchCurrentlyPlayingTrack('https://spotify.thefemdevs.com/playing/nezha');\r\n\r\n        RPC.setActivity({\r\n            details: `Listening to ${trackName}`,\r\n            state: `by ${artistName}`,\r\n            largeImageKey: \"spotify\",\r\n            buttons: [{ label: \"Listen on Spotify\", url: trackUrl }]\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Failed to update Discord RPC with Spotify:\", error);\r\n    }\r\n}\r\n\r\n// Example usage\r\nRPC.on(\"ready\", async () => {\r\n    setActivity();\r\n    setInterval(setActivity, 15e3); // Update every 15 seconds\r\n});\r\n\r\nRPC.login({ clientId }).catch(err => console.error(err));\r\n\r\nsetActivity();"]}