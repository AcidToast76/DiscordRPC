{"version":3,"sources":["app.js"],"names":["clientId","DiscordRPC","require","RPC","Client","transport","register","spotifyrpc","url","fetch","then","res","json","spotifyRPC","console","log","setActivity","details","state","largeImageKey","largeImageText","smallImageKey","smallImageText","instance","buttons","label","setSpotifyRPC","on","setInterval","login","err","error"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,qBAAjB;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMC,GAAG,GAAG,IAAIF,UAAU,CAACG,MAAf,CAAsB;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAtB,CAAZ;AAEAJ,UAAU,CAACK,QAAX,CAAoBN,QAApB;;AAEA,SAAeO,UAAf,CAA2BC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAC0BC,KAAK,CAAC,8CAAD,CAAL,CAAsDC,IAAtD,CAA2D,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WAA9D,CAD1B;;AAAA;AACOC,UAAAA,UADP;AAEGC,UAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAN,UAAU;;AAEV,SAAeS,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cACSb,GADT;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKIA,UAAAA,GAAG,CAACa,WAAJ,CAAgB;AACZC,YAAAA,OAAO,EAAE,gBADG;AAEZC,YAAAA,KAAK,EAAE,aAFK;AAGZC,YAAAA,aAAa,EAAE,OAHH;AAIZC,YAAAA,cAAc,EAAE,aAJJ;AAKZC,YAAAA,aAAa,EAAE,OALH;AAMZC,YAAAA,cAAc,EAAE,aANJ;AAOZC,YAAAA,QAAQ,EAAE,KAPE;AAQZC,YAAAA,OAAO,EAAE,CACL;AACIC,cAAAA,KAAK,EAAE,SADX;AACsBjB,cAAAA,GAAG,EAAE;AAD3B,aADK,EAIL;AACIiB,cAAAA,KAAK,EAAE,SADX;AACsBjB,cAAAA,GAAG,EAAE;AAD3B,aAJK;AARG,WAAhB;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwBA,SAAekB,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cACSvB,GADT;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKIA,UAAAA,GAAG,CAACa,WAAJ,CAAgB;AACZC,YAAAA,OAAO,EAAE,sBADG;AAEZC,YAAAA,KAAK,EAAE,eAFK;AAGZC,YAAAA,aAAa,EAAE,OAHH;AAIZC,YAAAA,cAAc,EAAE,aAJJ;AAKZC,YAAAA,aAAa,EAAE,OALH;AAMZC,YAAAA,cAAc,EAAE,aANJ;AAOZC,YAAAA,QAAQ,EAAE,KAPE;AAQZC,YAAAA,OAAO,EAAE,CACL;AACIC,cAAAA,KAAK,EAAE,SADX;AACsBjB,cAAAA,GAAG,EAAE;AAD3B,aADK,EAIL;AACIiB,cAAAA,KAAK,EAAE,SADX;AACsBjB,cAAAA,GAAG,EAAE;AAD3B,aAJK;AARG,WAAhB;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyBAL,GAAG,CAACwB,EAAJ,CAAO,OAAP,EAAgB;AAAA;AAAA;AAAA;AAAA;AACZX,UAAAA,WAAW;AACXY,UAAAA,WAAW,CAAC,YAAM;AACdZ,YAAAA,WAAW;AACd,WAFU,EAER,IAFQ,CAAX;;AAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAOAb,GAAG,CAAC0B,KAAJ,CAAU;AAAE7B,EAAAA,QAAQ,EAARA;AAAF,CAAV,WAA8B,UAAA8B,GAAG;AAAA,SAAIhB,OAAO,CAACiB,KAAR,CAAcD,GAAd,CAAJ;AAAA,CAAjC","sourcesContent":["const clientId = \"1254145695762485248\";\r\nconst DiscordRPC = require(\"discord-rpc\");\r\nconst RPC = new DiscordRPC.Client({ transport: \"ipc\" });\r\n\r\nDiscordRPC.register(clientId);\r\n\r\nasync function spotifyrpc (url) {\r\n   let spotifyRPC = await fetch(\"https://spotify.thefemdevs.com/playing/nezha\").then(res => res.json())\r\n   console.log(spotifyRPC)\r\n}\r\n\r\nspotifyrpc()\r\n\r\nasync function setActivity() {\r\n    if (!RPC) {\r\n        return;\r\n    }\r\n    \r\n    RPC.setActivity({\r\n        details: \"Playing a game\",\r\n        state: \"In the menu\",\r\n        largeImageKey: \"large\",\r\n        largeImageText: \"Large Image\",\r\n        smallImageKey: \"small\",\r\n        smallImageText: \"Small Image\",\r\n        instance: false,\r\n        buttons: [\r\n            { \r\n                label: \"Website\", url: \"https://nezha.thefemdevs.com\" \r\n            },\r\n            { \r\n                label: \"Spotify\", url: \"https://open.spotify.com/user/hpjv09y99ucx7adf3jb6qijvp?si=40ac1fa71e7d44ee\" \r\n            }\r\n        ]\r\n    });\r\n}\r\n\r\nasync function setSpotifyRPC() {\r\n    if (!RPC) {\r\n        return;\r\n    }\r\n    \r\n    RPC.setActivity({\r\n        details: \"Listening to Spotify\",\r\n        state: \"Warframe Bops\",\r\n        largeImageKey: \"large\",\r\n        largeImageText: \"Large Image\",\r\n        smallImageKey: \"small\",\r\n        smallImageText: \"Small Image\",\r\n        instance: false,\r\n        buttons: [\r\n            { \r\n                label: \"Website\", url: \"https://nezha.thefemdevs.com\" \r\n            },\r\n            { \r\n                label: \"Spotify\", url: \"https://open.spotify.com/user/hpjv09y99ucx7adf3jb6qijvp?si=40ac1fa71e7d44ee\" \r\n            }\r\n        ]\r\n    });\r\n\r\n}\r\n\r\nRPC.on(\"ready\", async () => {\r\n    setActivity();\r\n    setInterval(() => {\r\n        setActivity();\r\n    }, 15e3);\r\n});\r\n\r\nRPC.login({ clientId }).catch(err => console.error(err));"],"file":"app.dev.js"}