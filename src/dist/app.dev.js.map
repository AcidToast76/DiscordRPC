{"version":3,"sources":["app.js"],"names":["clientId","DiscordRPC","require","RPC","Client","transport","spotifyJSONfetch","url","fetch","then","res","json","spotifyData","console","log","updateDiscordRPCWithSpotify","dir","song","name","artists","album","setActivity","details","state","largeImageKey","largeImageText","buttons","label","on","setInterval","login","err","error"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,qBAAjB;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMC,GAAG,GAAG,IAAIF,UAAU,CAACG,MAAf,CAAsB;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAtB,CAAZ;;AAEA,SAAeC,gBAAf,CAAgCC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAC4BC,KAAK,CAAC,8CAAD,CAAL,CAAsDC,IAAtD,CAA2D,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WAA9D,CAD5B;;AAAA;AACQC,UAAAA,WADR;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAFJ,2CAGWA,WAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAN,gBAAgB,G,CAEhB;;AACA,SAAeS,2BAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAC4BP,KAAK,CAAC,8CAAD,CAAL,CAAsDC,IAAtD,CAA2D,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WAA9D,CAD5B;;AAAA;AACQC,UAAAA,WADR;AAEIC,UAAAA,OAAO,CAACG,GAAR,CAAYJ,WAAZ;;AAFJ,cAGQT,GAHR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,8BAOyCS,WAAW,CAACK,IAPrD,EAOYC,IAPZ,qBAOYA,IAPZ,EAOkBC,OAPlB,qBAOkBA,OAPlB,EAO2BC,KAP3B,qBAO2BA,KAP3B,EAOkCb,GAPlC,qBAOkCA,GAPlC;AASIJ,UAAAA,GAAG,CAACkB,WAAJ,CAAgB;AACZC,YAAAA,OAAO,EAAE,sBADG;AAEZC,YAAAA,KAAK,YAAKL,IAAL,iBAAgBC,OAAhB,iBAA8BC,KAA9B,CAFO;AAGZI,YAAAA,aAAa,EAAE,SAHH;AAIZC,YAAAA,cAAc,EAAEL,KAJJ;AAKZM,YAAAA,OAAO,EAAE,CACL;AAAEC,cAAAA,KAAK,EAAE,mBAAT;AAA8BpB,cAAAA,GAAG,EAAHA;AAA9B,aADK,EAEL;AAAEoB,cAAAA,KAAK,EAAE,SAAT;AAAoBpB,cAAAA,GAAG,EAAE;AAAzB,aAFK;AALG,WAAhB;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBAJ,GAAG,CAACyB,EAAJ,CAAO,OAAP,EAAgB;AAAA;AAAA;AAAA;AAAA;AACZb,UAAAA,2BAA2B;AAC3Bc,UAAAA,WAAW,CAAC,YAAM;AACdd,YAAAA,2BAA2B;AAC9B,WAFU,EAER,IAFQ,CAAX;;AAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAOAZ,GAAG,CAAC2B,KAAJ,CAAU;AAAE9B,EAAAA,QAAQ,EAARA;AAAF,CAAV,WAA8B,UAAA+B,GAAG;AAAA,SAAIlB,OAAO,CAACmB,KAAR,CAAcD,GAAd,CAAJ;AAAA,CAAjC","sourcesContent":["const clientId = \"1254145695762485248\";\r\nconst DiscordRPC = require(\"discord-rpc\");\r\nconst RPC = new DiscordRPC.Client({ transport: \"ipc\" });\r\n\r\nasync function spotifyJSONfetch(url) {\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json())\r\n    console.log(spotifyData)\r\n    return spotifyData;\r\n}\r\n\r\nspotifyJSONfetch();\r\n\r\n// Function to update Discord RPC with Spotify track information\r\nasync function updateDiscordRPCWithSpotify() {\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json());\r\n    console.dir(spotifyData);\r\n    if(!RPC) {\r\n        return;\r\n    }\r\n\r\n    const { name, artists, album, url} = spotifyData.song\r\n    \r\n    RPC.setActivity({\r\n        details: \"Listening To Spotify\",\r\n        state: `${name} by ${artists} on ${album}`,\r\n        largeImageKey: \"spotify\",\r\n        largeImageText: album,\r\n        buttons: [\r\n            { label: \"Listen on Spotify\", url },\r\n            { label: \"Website\", url: \"https://nezha.thefemdevs.com\"},\r\n        ],\r\n    })\r\n\r\n\r\n}\r\n\r\nRPC.on(\"ready\", async () => {\r\n    updateDiscordRPCWithSpotify();\r\n    setInterval(() => {\r\n        updateDiscordRPCWithSpotify();\r\n    }, 15e3);\r\n});\r\n\r\nRPC.login({ clientId }).catch(err => console.error(err));\r\n"],"file":"app.dev.js"}