{"version":3,"sources":["app.js"],"names":["clientId","DiscordRPC","require","RPC","Client","transport","spotifyJSONfetch","url","fetch","then","res","json","spotifyData","console","log","updateDiscordRPCWithSpotify","dir","playing","isPlaying","setActivity","details","state","track","title","artists","name","album","largeImageKey","image","largeImageText","buttons","label","on","setInterval","login","err","error"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,qBAAjB;;AACA,IAAMC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMC,GAAG,GAAG,IAAIF,UAAU,CAACG,MAAf,CAAsB;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAtB,CAAZ;;AAEA,SAAeC,gBAAf,CAAgCC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAC4BC,KAAK,CAAC,8CAAD,CAAL,CAAsDC,IAAtD,CAA2D,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WAA9D,CAD5B;;AAAA;AACQC,UAAAA,WADR;AAEIC,UAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAFJ,2CAGWA,WAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAN,gBAAgB,G,CAEhB;;AACA,SAAeS,2BAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAC4BP,KAAK,CAAC,8CAAD,CAAL,CAAsDC,IAAtD,CAA2D,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WAA9D,CAD5B;;AAAA;AACQC,UAAAA,WADR;AAEIC,UAAAA,OAAO,CAACG,GAAR,CAAYJ,WAAZ;;AAFJ,cAGQT,GAHR;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,iCAOmCS,WAAW,CAACK,OAP/C,EAOYA,OAPZ,wBAOYA,OAPZ,EAOqBC,SAPrB,wBAOqBA,SAPrB;AASIf,UAAAA,GAAG,CAACgB,WAAJ,CAAgB;AACZC,YAAAA,OAAO,EAAE,sBADG;AAEZC,YAAAA,KAAK,YAAKJ,OAAO,CAACK,KAAR,CAAcC,KAAnB,iBAA+BN,OAAO,CAACO,OAAR,CAAgBC,IAA/C,iBAA0DR,OAAO,CAACS,KAAR,CAAcH,KAAxE,CAFO;AAGZI,YAAAA,aAAa,EAAEV,OAAO,CAACS,KAAR,CAAcF,OAAd,CAAsBI,KAHzB;AAIZC,YAAAA,cAAc,EAAEZ,OAAO,CAACS,KAAR,CAAcH,KAJlB;AAKZO,YAAAA,OAAO,EAAE,CACL;AAAEC,cAAAA,KAAK,EAAE,mBAAT;AAA8BxB,cAAAA,GAAG,EAAEU,OAAO,CAACK,KAAR,CAAcf;AAAjD,aADK,EAEL;AAAEwB,cAAAA,KAAK,EAAE,SAAT;AAAoBxB,cAAAA,GAAG,EAAE;AAAzB,aAFK;AALG,WAAhB;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBAJ,GAAG,CAAC6B,EAAJ,CAAO,OAAP,EAAgB;AAAA;AAAA;AAAA;AAAA;AACZjB,UAAAA,2BAA2B;AAC3BkB,UAAAA,WAAW,CAAC,YAAM;AACdlB,YAAAA,2BAA2B;AAC9B,WAFU,EAER,IAFQ,CAAX;;AAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAOAZ,GAAG,CAAC+B,KAAJ,CAAU;AAAElC,EAAAA,QAAQ,EAARA;AAAF,CAAV,WAA8B,UAAAmC,GAAG;AAAA,SAAItB,OAAO,CAACuB,KAAR,CAAcD,GAAd,CAAJ;AAAA,CAAjC","sourcesContent":["const clientId = \"1254145695762485248\";\r\nconst DiscordRPC = require(\"discord-rpc\");\r\nconst RPC = new DiscordRPC.Client({ transport: \"ipc\" });\r\n\r\nasync function spotifyJSONfetch(url) {\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json())\r\n    console.log(spotifyData)\r\n    return spotifyData;\r\n}\r\n\r\nspotifyJSONfetch();\r\n\r\n// Function to update Discord RPC with Spotify track information\r\nasync function updateDiscordRPCWithSpotify() {\r\n    let spotifyData = await fetch('https://spotify.thefemdevs.com/playing/nezha').then(res => res.json());\r\n    console.dir(spotifyData);\r\n    if(!RPC) {\r\n        return;\r\n    }\r\n\r\n    const { playing, isPlaying } = spotifyData.playing;\r\n    \r\n    RPC.setActivity({\r\n        details: \"Listening To Spotify\",\r\n        state: `${playing.track.title} by ${playing.artists.name} on ${playing.album.title}`,\r\n        largeImageKey: playing.album.artists.image,\r\n        largeImageText: playing.album.title,\r\n        buttons: [\r\n            { label: \"Listen on Spotify\", url: playing.track.url },\r\n            { label: \"Website\", url: \"https://nezha.thefemdevs.com\"},\r\n        ],\r\n    })\r\n\r\n\r\n}\r\n\r\nRPC.on(\"ready\", async () => {\r\n    updateDiscordRPCWithSpotify();\r\n    setInterval(() => {\r\n        updateDiscordRPCWithSpotify();\r\n    }, 15e3);\r\n});\r\n\r\nRPC.login({ clientId }).catch(err => console.error(err));\r\n"],"file":"app.dev.js"}